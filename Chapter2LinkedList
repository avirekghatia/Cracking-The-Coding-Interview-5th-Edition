package ctciChapter2;

import java.util.HashMap;

public class LinkedList {
	
	Node head;
	
	public LinkedList(){
		this.head = null;
	}
	
	/*
	 * Adds an element to the end of the linked list.
	 */
	public void add(Object data){
		Node node = new Node(data);
		if(head == null)
			head = node;
		else{
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			temp.next = node;
		}
	}
	
	public void deleteNode(Object data){
		
		if(head == null){
			System.out.println("The list is empty");
		}
		
		else if(head.data == data){
			head = head.next;
			System.out.println("The element has been deleted");
		}
		
		else{
			Node temp = head;
			while(temp.next != null && temp.next.data != data){
				temp = temp.next;
			}
			if(temp.next == null){
				System.out.println("The element is not present in the list.");
			}
			else{
				temp.next = temp.next.next;
			}
		}
		
	}
	
	public void traverseList(){
		System.out.println();
		System.out.println("Traversing the list");
		Node temp = head;
		while(temp.next != null){
			System.out.println(temp.data);
			temp = temp.next;
		}
		System.out.println(temp.data);
	}
	
	public int sizeOfLinkedList(){
		int size = 0;
		Node temp = head;
		if(temp == null){
			return 0;
		}
		else{
			size = 1;
			while(temp.next != null){
				size += 1;
				temp = temp.next;
			}
			return size;
		}
	}
	
	public void removeDuplicatesHashTable(){
		Node temp = head;
		HashMap<Object, Boolean> hashMap = new HashMap<Object, Boolean>();
		while(temp.next != null){
			if(hashMap.containsKey(temp.data)){
				System.out.println("Contains duplicates");
				Node follower = head;
				while(follower.next != temp){
					follower = follower.next;
				}
				follower.next = temp.next;
			}
			else{
				hashMap.put(temp.data, true);
			}
			temp = temp.next;
		}
		if(hashMap.containsKey(temp.data)){
			System.out.println("Contains duplicates");
			Node follower = head;
			while(follower.next != temp){
				follower = follower.next;
			}
			follower.next = null;
		}
		else{
			hashMap.put(temp.data, true);
		}
		System.out.println("They are unique");
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		LinkedList linkedList = new LinkedList();
		linkedList.add("F");
		linkedList.add("O");
		linkedList.add("L");
		linkedList.add("L");
		linkedList.add("O");
		linkedList.add("W");
		linkedList.add(" ");
		linkedList.add("U");
		linkedList.add("P");
		linkedList.add("P");
		linkedList.removeDuplicatesHashTable();
		//System.out.println("The size of list is "+linkedList.sizeOfLinkedList());
		
		//Using bubble sort to sort the array elements.
		linkedList.traverseList();
		
		
		/*linkedList.traverseList();
		linkedList.deleteNode("F");
		linkedList.traverseList();
		
		linkedList.deleteNode("X");
		linkedList.traverseList();*/
	}

}
